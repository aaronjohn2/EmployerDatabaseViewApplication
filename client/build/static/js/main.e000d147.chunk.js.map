{"version":3,"sources":["containers/Layout.js","components/SocialButtonList.js","firebase/firebase.js","firebase/auth.js","components/Navbar2.js","components/Login.js","components/SocialProfileList.js","components/CompanyView.js","components/Navbar1.js","components/Dashboard.js","components/About.js","components/EmployeeInfo.js","components/AddManager.js","components/Home.js","components/SearchTweets.js","containers/withAuthentication.js","components/Footer1.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Layout","_ref","children","contentCenter","react_default","a","createElement","className","defaultProps","SocialButtonList","history","buttonList","auth","currentProviders","authHandler","authData","console","log","user","providerData","error","Object","keys","map","provider","visible","key","concat","onClick","e","providerOAuth","currentUser","linkWithPopup","then","catch","err","signInWithPopup","authenticate","withRouter","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getAuth","githubOAuth","firebase_","GithubAuthProvider","twitterOAuth","TwitterAuthProvider","facebookOAuth","FacebookAuthProvider","googleOAuth","GoogleAuthProvider","Navbar2","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","reactstrap_es","href","navbar","Component","host_url","window","location","protocol","hostname","google","github","addScope","twitter","facebook","Login","createNewUser","uid","_this2","onAuthStateChanged","axios","get","res","status","data","company","length","push","email","access_level","post","_id","toString","finally","final","components_Navbar2","src_containers_Layout","src_components_SocialButtonList","Link","to","SocialProfileList","handleProviderUnlink","_callee","_this$props","unlinkedProvider","providers","regenerator_default","wrap","_context","prev","next","confirm","unlink","sent","stop","renderProfileList","_ref2","providerId","photoURL","providerName","split","src","alt","react","PureComponent","CompanyView","companyName","companyVacant","user_uid","handleChange","submitNewCompany","event","target","value","put","alert","preventDefault","onSubmit","id","type","onChange","Navbar1","signOut","Dashboard","handleCurrentProviders","updateProviders","objectSpread","forEach","updateButtonList","handleUnliknedProvider","delete","defineProperty","components_Navbar1","src_components_SocialProfileList","components_CompanyView","About","getRowId","row","EmployeeInfo","getUserInfo","user_company","user_access","loadData","checkData","trim","first_name","last_name","salary","manager_id","position","isNaN","parseFloat","isFinite","parseInt","params","rows","newRowsState","index","columns","name","title","commitChanges","added","changed","deleted","startingAddedId","toConsumableArray","deletedSet","Set","filter","has","_this$state","dx_react_grid_bootstrap4_es","dx_react_grid_es","onCommitChanges","showAddCommand","showEditCommand","showDeleteCommand","React","AddManager","getCurUser","cur_uuid","cur_user_company","new_user_access","addNewManager","new_user","size","Home","handleSubmit","components_AddManager","components_EmployeeInfo","SearchTweets","tweets","newTweetsState","statuses","tweet","text","withAuthentication","WrappedComponent","_Component","WithAuthentication","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","inherits","createClass","info","assign","Delay_default","wait","Footer1","mdbreact","color","fluid","md","Date","getFullYear","App","cur_user_uid","BrowserRouter","Switch","Route","path","exact","component","components_Footer1","isLocalhost","Boolean","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e000d147.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Layout.css';\n\nconst propTypes = {\n    children: PropTypes.node.isRequired,\n    contentCenter: PropTypes.bool\n};\n\nconst defaultProps = {\n    contentCenter: false\n};\n\nconst Layout = ({ children, contentCenter }) => {\n    return (\n        <section>\n            <header>\n                <h1>Employer Database View Application</h1>\n            </header>\n            <main className={contentCenter ? 'content-center' : ''}>{children}</main>\n            <footer>\n\n            </footer>\n        </section>\n    );\n};\n\nLayout.propTypes = propTypes;\nLayout.defaultProps = defaultProps;\n\nexport default Layout;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport './SocialButtonList.css';\n\nconst propTypes = {\n    buttonList: PropTypes.shape({\n        github: PropTypes.shape({\n            visible: PropTypes.bool.isRequired,\n            provider: PropTypes.func.isRequired\n        }),\n        twitter: PropTypes.shape({\n            visible: PropTypes.bool.isRequired,\n            provider: PropTypes.func.isRequired\n        }),\n        facebook: PropTypes.shape({\n            visible: PropTypes.bool.isRequired,\n            provider: PropTypes.func.isRequired\n        })\n    }).isRequired,\n    auth: PropTypes.func.isRequired,\n    currentProviders: PropTypes.func\n};\n\nconst defaultProps = {\n    currentProviders: null\n};\n\nconst SocialButtonList = ({ history, buttonList, auth, currentProviders }) => {\n    const authHandler = authData => {\n        if (authData) {\n            if (currentProviders === null) {\n                // history.push('/dashboard');\n                console.log('');\n            } else {\n                currentProviders(authData.user.providerData);\n            }\n        } else {\n            console.error('Error authenticating');\n        }\n    };\n\n    const authenticate = (e, provider) => {\n        const providerOAuth = buttonList[provider].provider();\n\n        if (!auth().currentUser) {\n            auth()\n                .signInWithPopup(providerOAuth)\n                .then(authHandler)\n                .catch(err => console.error(err));\n        } else {\n            auth()\n                .currentUser.linkWithPopup(providerOAuth)\n                .then(authHandler)\n                .catch(err => console.error(err));\n        }\n    };\n\n    const renderButtonList = provider => {\n        const visible = buttonList[provider].visible;\n\n        return (\n            <button\n                key={provider}\n                className={`btn__social btn--${provider} ${!visible && 'hidden'}`}\n                onClick={e => authenticate(e, provider)}\n            >\n                {provider}\n            </button>\n        );\n    };\n\n    return (\n        <div className=\"btn__social--list\">\n            {Object.keys(buttonList).map(renderButtonList)}\n        </div>\n    );\n};\n\nSocialButtonList.propTypes = propTypes;\nSocialButtonList.defaultProps = defaultProps;\n\nexport default withRouter(SocialButtonList);","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyC3m1LnKXudteB2WKCToWZ-0-_cVgp-NNU\",\n    authDomain: \"edva-cmpe172.firebaseapp.com\",\n    databaseURL: \"https://edva-cmpe172.firebaseio.com\",\n    projectId: \"edva-cmpe172\",\n    storageBucket: \"edva-cmpe172.appspot.com\",\n    messagingSenderId: \"606646992739\"\n};\n\nconst app = firebase.initializeApp(config);\n\nexport default app;","import firebase from './firebase';\n\nexport const getAuth = () => {\n    return firebase.auth();\n};\n\nexport const githubOAuth = () => {\n    return new firebase.firebase_.auth.GithubAuthProvider();\n};\n\nexport const twitterOAuth = () => {\n    return new firebase.firebase_.auth.TwitterAuthProvider();\n};\n\nexport const facebookOAuth = () => {\n    return new firebase.firebase_.auth.FacebookAuthProvider();\n};\n\nexport const googleOAuth = () => {\n    return new firebase.firebase_.auth.GoogleAuthProvider();\n};\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink } from 'reactstrap';\n//import * as auth from \"../firebase/auth\";\n\nclass Navbar2 extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render() {\n        return (\n            <div >\n                <Navbar className=\"navbar navbar-expand-sm bg-success navbar-dark\" >\n                    <NavbarBrand href=\"/\">EDVA</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/About/\">About</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/aaronjohn2/EmployerDatabaseViewApplication.git\">Github</NavLink>\n                            </NavItem>\n\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Navbar2;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Layout from '../containers/Layout';\nimport SocialButtonList from './SocialButtonList';\nimport { auth } from '../firebase';\nimport Navbar2 from '../components/Navbar2';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\n\n// export const host_url = 'http://localhost:3001';\n\nconst PORT = '3001';\nexport const host_url = window.location.protocol + \"//\" + window.location.hostname + ':' + PORT;\nconsole.log('Host url is: ' + host_url);\n\nconst buttonList = {\n    google: {\n        visible: true,\n        provider: () => auth.googleOAuth()\n    },\n    github: {\n        visible: true,\n        provider: () => {\n            const provider = auth.githubOAuth();\n            provider.addScope('user');\n            return provider;\n        }\n    },\n    twitter: {\n        visible: true,\n        provider: () => auth.twitterOAuth()\n    },\n    facebook: {\n        visible: true,\n        provider: () => auth.facebookOAuth()\n    }\n};\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            createNewUser: false,\n            uid: ''\n        }\n\n\n    }\n\n    componentDidMount() {\n        auth.getAuth().onAuthStateChanged(user => {\n            if (user) {\n\n                this.setState({\n                    uid: user.uid\n                });\n\n                console.log('User logged in as: ' + user.uid);\n\n                axios.get(host_url + '/user/' + user.uid)\n                    .then( res => {\n                        console.log('Res status' + res.status);\n                        if (res.status === 200) {\n                            console.log(res.data);\n\n                            let company = res.data['0']['company'];\n                            console.log('Company is: ' + company);\n                            if (company !== null && company !== ''\n                            && company.length > 1) {\n                                this.props.history.push('/home');\n                            } else {\n                                this.props.history.push('/dashboard');\n                            }\n                        } else {\n                            console.log('ELSE');\n                        }\n                    })\n                    .catch(error => {\n\n                        this.setState({createNewUser: true });\n                        console.log('User sign in error is: ' + error);\n\n                        console.log('Creating user in db');\n                        let data = {\n                            \"uid\": user.uid,\n                            \"email\": user.email,\n                            \"access_level\": '',\n                            \"company\": ''\n                        };\n                        axios.post(host_url + '/user', data)\n                            .then( (res) => {\n                                if(res.data._id) {\n                                    console.log('Data to be posted' + res.data);\n                                    this.props.history.push('/dashboard');\n                                }\n                                // else {\n                                //     alert('Couldnt register your account, try again');\n                                // }\n                            } )\n                            .catch( error => {\n                                console.log('Error on user post' + error.toString())\n                            })\n                    })\n                    .finally( final => {\n                        console.log('Finally');\n                    })\n                }\n        });\n    }\n\n    render() {\n        return (\n\n            <div>\n                <Navbar2/>\n\n            <Layout contentCenter={true}>\n\n                <p>Signin using Google Single Sign-on, link is {host_url}</p>\n                <p>Current link is {host_url}</p>\n                <SocialButtonList buttonList={buttonList} auth={auth.getAuth} />\n                <Link to=\"/searchtweets\"> click to view EDVA's user review tweets</Link>\n            </Layout>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SocialProfileList.css';\n\nclass SocialProfileList extends PureComponent {\n    static propTypes = {\n        auth: PropTypes.func.isRequired,\n        providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\n        unlinkedProvider: PropTypes.func.isRequired\n    };\n\n    /**\n     * Unlinks a provider from the current user account\n     */\n    handleProviderUnlink = async (e, provider) => {\n        const { auth, unlinkedProvider } = this.props;\n\n        if (window.confirm(`Do you really want to unlink ${provider}?`)) {\n            const providers = await auth()\n                .currentUser.unlink(`${provider}.com`)\n                .catch(err => console.error(err));\n\n            unlinkedProvider(provider, providers.providerData);\n        }\n    };\n\n    renderProfileList = ({ providerId, photoURL }) => {\n        const providerName = providerId.split('.')[0];\n\n        return (\n            <div className=\"container__profile\" key={providerName}>\n                <img\n                    src={photoURL}\n                    alt={providerName}\n                    className=\"container__profile--photo\"\n                />\n                <p>{providerName}</p>\n                <button\n                    className=\"container__profile--btn\"\n                    onClick={e => this.handleProviderUnlink(e, providerName)}\n                >\n                    Unlink\n                </button>\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <p className=\"text--center\">\n                    <strong>Connected Social Accounts</strong>\n                </p>\n                <div className=\"btn__profiles--list\">\n                    {this.props.providerData.map(this.renderProfileList)}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default SocialProfileList;","// Author: Tahsin Hossain, Raghav Gupta;\nimport React, { Component } from 'react';\nimport './Home.css';\nimport axios from 'axios';\n\nimport { auth } from '../firebase';\nimport {host_url} from \"./Login\";\n\nclass CompanyView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            companyName: '',\n            companyVacant: true,\n            user_uid: auth.getAuth().currentUser.uid\n        };\n\n        console.log(this.state.user_uid);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitNewCompany = this.submitNewCompany.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({companyName: event.target.value});\n    }\n\n    submitNewCompany(event) {\n\n        console.log('Company name: ' + this.state.companyName);\n\n        let data = {\n            \"company\": this.state.companyName,\n            \"access_level\": \"0\"\n        };\n\n        axios.put(host_url + `/user/${this.state.user_uid}`, data)\n            .then( res => {\n                if(res.status === 200) {\n                    console.log(res.data);\n                    alert(`${this.state.companyName} company created successfully`);\n                } else {\n                    console.log('Company was not created');\n                }\n            })\n            .catch( error => {\n                console.log('Company creation error: ' + error.toString());\n            });\n\n        event.preventDefault();\n\n    }\n\n    // checkIfCompanyExists() {\n    //     axios.get(host_url + `/user/${this.state.user_uid}`)\n    //         .then( res => {\n    //             if(res.status === 200) {\n    //                 let company = res.data['0']['company']\n    //                 if( company === null || res)\n    //             }\n    //         })\n    // }\n\n    render() {\n        return (\n            <form onSubmit={this.submitNewCompany}>\n                <div id=\"com\">\n                    <div id=\"create\">\n                        <div id=\"boxborder\">\n                            <div> <label>\n                                Create Company\n                            </label>\n                            </div>\n                        </div>\n\n                        <div id=\"boxborder\">\n                            <label>\n                                Company Name:\n                            </label>\n\n                            <input type=\"text\" value={this.state.companyName} onChange={this.handleChange} />\n\n                        </div>\n                        <div id=\"boxborder\">\n\n                            <input type=\"submit\" value=\"Submit\" />\n                        </div>\n                    </div>\n\n\n                    <div id=\"join\">\n                        <div id=\"boxborder\">\n                            <p>Join Company</p>\n                        </div>\n\n                        <div id=\"boxborder\">\n                            <p>Your UID: </p>\n                            <label>\n                                {this.state.user_uid}\n                            </label>\n                        </div>\n\n                        <div id=\"boxborder\">\n                            <label>\n                                Send your UID to the company manager\n                            </label>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default CompanyView;","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    // UncontrolledDropdown,\n    // DropdownToggle,\n    // DropdownMenu,\n    // DropdownItem\n    } from 'reactstrap';\nimport * as auth from \"../firebase/auth\";\n\nclass Navbar1 extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render() {\n        return (\n\n            <div>\n\n                <Navbar className=\"navbar navbar-expand-sm bg-success navbar-dark\"  >\n                    <NavbarBrand href=\"/\">EDVA</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/Dashboard/\">Dashboard</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"/Home/\">Data Table</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/aaronjohn2/EmployerDatabaseViewApplication.git\">Github</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <button\n                                    className=\"btn__logout\"\n                                    onClick={() => auth.getAuth().signOut()}\n                                >\n                                    Logout\n                                </button>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n\n            </div>\n        );\n    }\n}\n\n export default Navbar1;","// Author: Nikita, Tahsin, Raghav;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../containers/Layout';\nimport SocialProfileList from './SocialProfileList';\nimport { auth } from '../firebase';\n\nimport CompanyView from './CompanyView.js';\nimport Navbar1 from '../components/Navbar1';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n    static propTypes = {\n        providerData: PropTypes.arrayOf(PropTypes.object).isRequired\n    };\n\n    static defaultProps = {\n        providerData: []\n    };\n\n\n\n    state = {\n        buttonList: {\n            github: {\n                visible: false,\n                provider: () => {\n                    const provider = auth.githubOAuth();\n                    provider.addScope('user');\n                    return provider;\n                }\n            },\n            twitter: {\n                visible: false,\n                provider: () => auth.twitterOAuth()\n            },\n            facebook: {\n                visible: false,\n                provider: () => auth.facebookOAuth()\n            }\n        },\n        providerData: this.props.providerData\n    };\n\n\n\n\n    componentDidMount() {\n        this.updateProviders(this.state.providerData);\n    }\n\n    handleCurrentProviders = providerData => {\n        this.updateProviders(providerData);\n    };\n\n    updateProviders = providerData => {\n        let buttonList = { ...this.state.buttonList };\n\n        providerData.forEach(provider => {\n            const providerName = provider.providerId.split('.')[0];\n            buttonList = this.updateButtonList(buttonList, providerName, false);\n        });\n\n        this.setState({ buttonList, providerData });\n    };\n\n    handleUnliknedProvider = (providerName, providerData) => {\n        if (providerData.length < 1) {\n            auth\n                .getAuth()\n                .currentUser.delete()\n                .then(() => console.log('User Deleted'))\n                .catch(() => console.error('Error deleting user'));\n        }\n\n        let buttonList = { ...this.state.buttonList };\n        buttonList = this.updateButtonList(buttonList, providerName, true);\n\n        this.setState({ buttonList, providerData });\n    };\n\n    updateButtonList = (buttonList, providerName, visible) => ({\n        ...buttonList,\n        [providerName]: {\n            ...buttonList[providerName],\n            visible\n        }\n    });\n\n    render() {\n        return (\n\n            <div>\n                <Navbar1/>\n            <Layout>\n\n                <SocialProfileList\n                    auth={auth.getAuth}\n                    providerData={this.state.providerData}\n                    unlinkedProvider={this.handleUnliknedProvider}\n                />\n                <CompanyView/>\n\n            </Layout>\n            </div>\n\n\n\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Layout from '../containers/Layout';\n\nconst About = () => {\n    return (\n        <div>\n            <Navbar2/>\n        <Layout>\n            <h2>About</h2>\n            <p>\n                Bacon ipsum dolor amet tail landjaeger corned beef chuck hamburger,\n                salami strip steak. Pancetta kielbasa ham hock andouille. Tail cupim\n                burgdoggen salami bacon jerky shankle strip steak turkey. Drumstick\n                shoulder pork loin, filet mignon cupim alcatra tongue jowl. Cupim\n                tenderloin rump t-bone. Picanha turducken short loin jowl, landjaeger\n                shoulder t-bone buffalo spare ribs salami pastrami tri-tip ground round\n                alcatra.\n            </p>\n        </Layout>\n            </div>\n    );\n};\n\nexport default About;","import * as React from 'react';\nimport { Card } from 'reactstrap';\nimport { EditingState } from '@devexpress/dx-react-grid';\nimport {host_url} from \"./Login\";\nimport {auth} from '../firebase'\n\nimport {\n    Grid,\n    Table,\n    TableHeaderRow,\n    TableEditRow,\n    TableEditColumn,\n} from '@devexpress/dx-react-grid-bootstrap4';\nimport axios from 'axios';\n\nconst getRowId = row => row.id;\n\n\n\n\nclass EmployeeInfo extends React.PureComponent {\n    constructor(props) {\n        super(props);\n// //id, firstName, lastName, email, position, task, company\n\n        this.state = {\n            uid: auth.getAuth().currentUser.uid,\n            user_company: '',\n            user_access: '',\n            columns: [\n                // { name: 'uid', title: 'ID' },\n                { name: 'first_name', title: 'First Name' },\n                { name: 'last_name', title: 'Last Name' },\n                { name: 'email', title: 'Email' },\n                { name: 'salary', title: 'Salary' },\n                { name: 'manager_id', title: 'Manager ID' },\n                { name: 'position', title: 'Position' },\n                { name: 'access_level', title: 'Access level' },\n                { name: 'company', title: 'Company' },\n            ],\n            rows: [],\n        };\n\n        this.getUserInfo();\n\n        this.commitChanges = this.commitChanges.bind(this);\n        // this.loadData = this.loadData.bind(this);\n    }\n\n    getUserInfo = () => {\n\n        axios.get(host_url + `/user/${this.state.uid}`)\n            .then( res => {\n                if(res.status === 200) {\n                    this.setState({user_company: res.data['0']['company']});\n                    this.setState({user_access: '' + res.data['0']['access_level']});\n                    // console.log('User company: ' + this.state.user_company);\n                    // console.log('User access level: ' + this.state.user_access);\n                }\n            })\n            .finally( () => {\n                this.loadData();\n            })\n    };\n\n    checkData = (data) => {\n        Object.keys(data).forEach(key => {\n            data[key] = data[key].trim();\n        });\n\n        const {\n            first_name, last_name, email, salary, manager_id, position, access_level, company\n        } = data;\n\n\n        if (!first_name || first_name === '') {\n            alert('First Name cannot be left blank');\n            return false;\n        }\n\n        if (!last_name || last_name ==='') {\n            alert('Last Name cannot be left blank');\n            return false;\n        }\n        if (!email || email === '') {\n            alert('Email cannot be left blank');\n            return false;\n        }\n        if (!salary || salary === '') {\n            alert('Salary cannot be left blank');\n            return false;\n        }\n        if (!manager_id || manager_id ==='') {\n            alert('Manager id cannot be left blank');\n            return false;\n        }\n        if (!position || position === '') {\n            alert('Position cannot be left blank');\n            return false;\n        }\n        if (!company || company ==='') {\n            alert('Company name cannot be left blank');\n            return false;\n        }\n\n        if (!access_level || access_level === '' ) {\n            alert('Access level cannot be empty');\n            return false;\n        }\n\n        if (!(!isNaN(parseFloat(salary)) && isFinite(salary))) {\n            alert('salary can only contain numbers');\n            return false;\n        }\n\n        data.salary = parseInt(salary);\n        //console.log(data);\n\n        return true;\n    };\n\n\n\n    commitChanges({ added, changed, deleted }) {\n        let { rows } = this.state;\n        // const data = added[0];\n        // axios.post(host_url + '/data', data)\n        //     .then((data) => console.log(data))\n        //     .catch(err => console.log(err))\n\n        if (added) {\n            let data = added[0];\n\n            data['access_level'] = this.state.user_access;\n            data['manager_id'] = this.state.uid;\n            data['company'] = this.state.user_company;\n\n            if (this.checkData(data)) {\n                //data = this.checkData(data);\n\n                axios.post(host_url + '/data', data)\n                    .then((res) => {\n                        if(res.data._id) {\n                            console.log(res);\n                            const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n                            rows = [\n                                ...rows,\n                                ...added.map((row, index) => ({\n                                    id: startingAddedId + index,\n                                    ...row,\n                                })),\n                            ];\n                            console.log(rows);\n                            this.setState({ rows });\n                        } else {\n                            alert('unable to add. please check the data you entered');\n                        }\n                    })\n                    .catch(err => console.log(err))\n            }\n        }\n        if (changed) {\n            rows.map(row => {\n                if (changed[row.id]) {\n                    let data = {\n                        ...row,\n                        ...changed[row.id]\n                    };\n                    delete data['id'];\n                    data.salary = `${data.salary}`;\n                    if (this.checkData(data)) {\n                        const id = data._id;\n                        delete data['_id'];\n                        axios.put(host_url + `/data/${id}`, data)\n                            .then(res => {\n                                if (res.status === 200) {\n                                    rows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n                                    this.setState({ rows });\n                                }\n                            });\n                    }\n                }\n            });\n        }\n        if (deleted) {\n            rows.map(row => {\n                if (deleted[0] === row.id) {\n                    axios.delete(host_url + `/data/${row._id}`)\n                        .then(res => {\n                            if (res.status === 200) {\n                                const deletedSet = new Set(deleted);\n                                rows = rows.filter(row => !deletedSet.has(row.id));\n                                this.setState({ rows });\n                            }\n                        });\n                }\n            })\n\n\n        }\n    }\n\n    loadData = () => {\n\n        console.log('Company ' + this.state.user_company);\n\n        axios.get(host_url + '/getdata', {params: {\n            uid: this.state.uid,\n            company: this.state.user_company,\n            access_level: this.state.user_access\n        }}\n            ) //endpoint route\n            .then(res => {\n                if(res.status === 200) {\n                    const rows = res.data;\n                    let newRowsState = [];\n                    rows.forEach((row, index) => {\n                        const {\n                            first_name, last_name, email, salary, manager_id, position, access_level, company, _id\n                        } = row;\n\n                        newRowsState.push({ //pushing data to new const newRowState\n                            _id, first_name, last_name, email, salary, manager_id, position, access_level, company,\n                            id: index\n                        })\n                    });\n\n                    this.setState({ rows: newRowsState})\n                } else {\n                    alert('unable to fetch data, try again');\n                }\n            })\n            .catch( error => {\n                console.log(error.toString());\n            })\n    };\n\n    render() {\n        const { rows, columns } = this.state;\n        return (\n            <Card>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                    getRowId={getRowId}\n                >\n                    <EditingState\n                        onCommitChanges={this.commitChanges}\n                    />\n                    <Table />\n                    <TableHeaderRow />\n                    <TableEditRow />\n                    <TableEditColumn\n                        showAddCommand\n                        showEditCommand\n                        showDeleteCommand\n                    />\n                </Grid>\n            </Card>\n        );\n    }\n}\n\nexport default EmployeeInfo;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport {host_url} from \"./Login\";\n\nclass AddManager extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            cur_uuid: auth.getAuth().currentUser.uid,\n            cur_user_company: '',\n            new_user_access: '',\n            new_user: ''\n        };\n\n\n        this.handleChange = this.handleChange.bind(this);\n        this.getCurUser = this.getCurUser.bind(this);\n\n    }\n\n    componentDidMount() {\n        // this.setState({cur_user: );\n\n        // this.getCurUser();\n    }\n\n    getCurUser = (event) => {\n        axios.get(host_url + '/user/' + this.state.cur_uuid)\n            .then(res => {\n                if(res.status === 200) {\n                    const data = res.data;\n                    // console.log(data);\n                    this.setState({\n                        cur_user_company: data['0']['company'],\n                        new_user_access: (parseInt(data['0']['access_level']) + 1).toString()\n                    });\n                }\n            })\n            .finally( () => {\n                this.addNewManager();\n            });\n\n        event.preventDefault()\n    };\n\n\n\n    addNewManager = () => {\n\n        let data = {\n            \"company\": this.state.cur_user_company,\n            \"access_level\": this.state.new_user_access\n        };\n\n        console.log('New user uid: ' + this.state.new_user);\n        axios.put(host_url + `/user/${this.state.new_user}`, data)\n            .then(res => {\n                if (res.status === 200) {\n                    alert('Manager added successfully!');\n                    console.log(res.data);\n                }\n            })\n\n    };\n\n    handleChange(event) {\n        this.setState({new_user: event.target.value});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.getCurUser}>\n\n                <div id=\"addmanager\">\n\n                    <label>\n                        Add Manager :\n                    </label>\n                    <input type=\"text\" value={this.state.companyName} onChange={this.handleChange} size=\"50\" />\n\n                    <input type=\"submit\" value=\"Submit\" />\n\n                </div>\n\n\n\n            </form>\n        );\n    }\n}\n\nexport default AddManager;","// Author: Tahsin Hossain, Raghav Gupta;\nimport React, { Component } from 'react';\nimport EmployeeInfo from './EmployeeInfo.js';\nimport './Home.css';\nimport Navbar1 from '../components/Navbar1';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AddManager from \"./AddManager\";\n\nclass Home extends  Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({companyName: event.target.companyName});\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.companyName);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div>\n                <Navbar1/>\n                <div>\n                    <AddManager/>\n                </div>\n\n                <div>\n                    <EmployeeInfo/>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Home;\n","// Author: Tahsin Hossain, Raghav Gupta;\n\nimport React, {Component} from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {host_url} from \"./Login\";\n\n//import Layout from '../containers/Layout';\n\nimport axios from \"axios\";\n\n\nclass SearchTweets extends Component {\n    componentDidMount(){\n        axios.get(host_url + '/data/twitter') //endpoint route\n            .then(res => {\n                if (res.status === 200) {\n                    const tweets = res.data;\n                    let newTweetsState = tweets.statuses;\n                    this.setState({tweets: newTweetsState})\n\n                } else {\n                    alert('unable to fetch data, try again');\n                }\n            })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tweets: []\n        }\n    }\n\n\n\n    render() {\n        let tweets = this.state.tweets.map((tweet) =>\n        <div>{tweet.text}<br/></div>)\n        return (\n            <div>\n\n                <Navbar2/>\n\n                <h2>Tweets:</h2>\n\n                <div>\n\n                    <ul>\n                        <div> <li>{tweets}</li></div>\n                    </ul>\n\n                </div>\n\n            </div>\n\n\n        );\n    }\n\n}\nexport default SearchTweets;\n","import React, { Component } from 'react';\nimport Delay from 'react-delay';\n\nimport { auth } from '../firebase';\n\nexport default WrappedComponent => {\n    class WithAuthentication extends Component {\n        state = {\n            providerData: []\n        };\n\n        componentDidMount() {\n            auth.getAuth().onAuthStateChanged(user => {\n                if (user) {\n                    this.setState({ providerData: user.providerData });\n                } else {\n                    console.info('Must be authenticated');\n                    this.props.history.push('/');\n                }\n            });\n        }\n\n        render() {\n            return this.state.providerData.length > 0 ? (\n                <WrappedComponent\n                    {...this.props}\n                    providerData={this.state.providerData}\n                />\n            ) : (\n                <Delay wait={250}>\n                    <p>Loading...</p>\n                </Delay>\n            );\n        }\n    }\n\n    return WithAuthentication;\n};","import React, { Component } from 'react';\nimport { Col, Container, Row, Footer } from \"mdbreact\";\nimport './Home.css';\n\nclass Footer1 extends Component {\n    render() {\n        return (\n            <Footer color=\"green\" className=\"font-small pt-4 mt-4\" >\n                <Container fluid className=\"text-center text-md-left\">\n                    <Row>\n                        <Col md=\"6\">\n                            <h5 className=\"title\">CMPE 172 Final Project</h5>\n                            <p>\n\n                            </p>\n                        </Col>\n                        <Col md=\"6\">\n                            <h5> Team Members: </h5>\n                            <ul>\n                                <li className=\"list-unstyled\" >\n                                    <h5> Nikita, Raghav, Sam, Aaron, Tahsin</h5>\n                                </li>\n\n                            </ul>\n                        </Col>\n                    </Row>\n                </Container>\n                <div className=\"footer-copyright text-center py-3\">\n                    <Container fluid>\n                        &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                        <p> CMPE 172 Spartan Developer </p>\n                    </Container>\n                </div>\n            </Footer>\n        );\n    }\n}\n\nexport default Footer1;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from '../components/Login';\nimport Dashboard from '../components/Dashboard';\nimport About from '../components/About';\nimport Home from '../components/Home';\nimport SearchTweets from '../components/SearchTweets';\nimport withAuthentication from '../containers/withAuthentication';\nimport Footer1 from '../components/Footer1';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            cur_user_uid: ''\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" exact component={Login} />\n                        <Route path=\"/dashboard\" component={withAuthentication(Dashboard)} />\n                        <Route path=\"/about\" component={About} />\n                        <Route path=\"/home\" component={withAuthentication(Home)} />\n                        <Route path=\"/searchtweets\" component={SearchTweets} />\n\n                    </Switch>\n                </Router>\n                <Footer1/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}